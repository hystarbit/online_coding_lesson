타입스크립트 문법
간단한 변수 타입지정가능

let 이름 :string = 'kim';
이 변수엔 string(문자) type만 들어올 수 있습니다.

string
number
boolean
null
undefined
bigint
[]
{}
등

array 타입지정

let 이름 :string[] =['kim','park'];
이 변수엔 string 담긴 array만 들어올 수 있습니다.

object 타입지정
let 이름 :{name? : string} = {name : 'kim'};
name속성은 옵션이에얌

다양한 타입이 들어올 수 있게 하려면
Union type
let 이름 :string | number = 123;

타입은 변수에 담아쓸 수 있음
Type alias
type 내타입 = string | number;

function 함수(x){
    return x * 2
}
함수에 타입지정 가능

function 함수(x: number){
    return x * 2
}

function 함수(x: number) : number{
    return x * 2
}
이 함수는 파라미터로 number, return 값으로 number
함수('123')

array에 쓸 수 있는 tuple 타입
type Memter = [number, boolean];
"무조건 첫째는 number, 둘째는 boolean"
let john:Member = [];
let john:Member = [123, true];

object에 타입지정해야할 속성이 너무 많으면

type Member = {
    name : string,
};
let john:Member = {name : 'kim'};

type Member = {
    [key :string] : string,
};
[key :string] -> 모든 object 속성
글자로 된 모든 object 속성의 타입은 : string

class 타입지정 가능
class User {
    name :string;
    constructor(name: string){
        this.name = name;
    }
}

TypeScript에서 지켜야할 코딩 룰도 있고
타입문법 외의 기능도 

다음 강의: 변수