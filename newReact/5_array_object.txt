2022 new 리액트 5강 : state가 array/object면

Q. 버튼누르면 첫  '여자코트 추천'으로 수정?

일부만 바꿔서 state변경함수에 넣어도 될듯

(참고)array/object 다룰 때 원본은 보존하는게 좋음
<button onClick = {()=>{
    글제목[0] = '여자코트 추천';
    글제목변경(글제목);
}}>
영구적으로 수정해버림

<button onClick = {()=>{
    let copy = [...글제목];
    copy[0] = '여자코트 추천';
    글제목변경(copy);
}}>

왜 돼는지 궁금하지 않습니까?
(동작원리 많이 알면 나중에 응용잘함)

[state변경함수 특징]
기존state == 신규state의 경우 변경안해줌

[array/object 특징]
array/object 담은 변수엔 화살표만 저장됨

        RAM
   |->  [1,2,3]
   |
let arr


<button onClick = {()=>{
    글제목[0] = '여자코트 추천';
    글제목변경(글제목);
}}>
        RAM
   |->  ['남자코트추천','어쩌구']
   |
let 글제목

        RAM
   |->  ['여자코트추천','어쩌구']
   |
let 글제목

array를 수정했지 변수에 있던 화살표는 수정안됨

글제목에 저장되어 있는 화살표 바뀐적 없음

<button onClick = {()=>{
    let copy = 글제목;
    copy[0] = '여자코트 추천';
    console.log(copy == 글제목)
    글제목변경(copy);
}}>

글제목 변수에 저장되어 있던건 화살표밖에 없음
let 글제목에 있던 화살표가 복사됨

수정된 [데이터]를 만듭니다

근데 원본 state 수정 X
(특히 state가 Array,Object 자료형이면)

변수1 & 변수2 화살표가 같으면
변수1 == 변수2 비교해도 true 나옴

copy는 기존state와 달라지지 않았다고 생각

array, object는
reference data type이라서 그럼

↓ 괄호 벗겨주세요
let copy = [...글제목];
(이러면 화살표도 달라짐)

빡대가리식 정리
state가 array/object면
독립적 카피본을 만들어서 수정해야 함
(shallow copy)

오늘의 숙제:
버튼 누르면 글제목 가나다순 정렬 기능 만들기

array 정렬하는 법 모르는데요
-> 당연히 검색해봐야